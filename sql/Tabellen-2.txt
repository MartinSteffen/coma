Mein Vorschlag für eine SQL-Tabellenstruktur:
Einige Dinge fehlen noch, z.B. die Tabellen für Kommunikation / Forum.
Es orientiert sich ziemlich am Spec-1 Vorschlag.

Mit "->" bezeichne ich Lookup-Felder für "Tabelle, Feld" (Foreign Key Constraint)

-- Gunnar

Überarbeitung des Vorschlags für die SQL-Tabellenstruktur.
Es wurde folgende Änderungen vorgenommen:

- Bezeichnungskonventionen: Tabellennamen groß, Attributnamen klein,
  durchgängig englische Bezeichner, Assoziationsrelationen sind als
  Verben formuliert, Objekttabellen als Substantive.
- Erweiterung um die Tabellen für das Forum (Forum, Message) und um
  Relationen zum Präferieren/Ablehnen von Artikeln (prefersPaper,
  deniesPaper).
- Ergänzung fehlender Attribute aus dem UML-Diagramm des Datenmodells.
- Bewertungskriterien und die Bewertungen in den einzelnen Kriterien
  sind in eigene Tabellen ausgelagert. Vorteil: Die Liste der Bewertungs-
  kriterien ist dynamisch und nicht statisch auf 10 festgelegt.
- Erweiterung der Co-Autoren-Tabelle um den Namen des Co-Autoren.
  Zweck: Co-Autoren müssen keine User sein. Das Feld ID wird die ID des
  Co-Autoren eventuell eingetragen, wenn CoMa erkennt, dass dieser auch
  User des Systems ist.

 + + + Sandro

Kleine Änderungen:
- Conference.abbreviation ist wie überall sonst Varchar 20
- User.roles genauere Beschreibung: Es sollen die least-significant Bits für die
  einzelnen Rollen genutzt werden.

-- Gunnar

Änderungen:
- Jede Tabelle, die referenziert wird bekommt eine ID, die vom System vergeben wird.
- Neue Tabellen für Rechte und Rollen
  die Tabelle Roles soll vordefiniert werden mit:
  
  type		description
  admin		superuser
  chair		organisation of conference
  reviewer	...
  author	...
  participant	...
  
- Tabelle Deniespapers gelöscht, stattdessen Status in Reviewreport eingefügt
- Tabelle Criterion um Wertigkeit erweitert
- Das Forum ist um Threads erweitert, Beziehung Paper - Thread gesetzt

-- Gunnar
  



Tabelle Conference
~~~~~~~~~~~~~~~~~~
id			      BigInt		Autoincrement, Primary Key
abbreviation                  Varchar 20	Not Null
name                          Varchar 127	Not Null
description                   Text
homepage                      Varchar 127
abstract_submission_deadline  Date
paper_submission_deadline     Date
review_deadline               Date
final_version_deadline        Date
notification                  Date
conference_start              Date
conference_end                Date
min_reviews_per_paper         Int

Tabelle Person
~~~~~~~~~~~~~~
id		BigInt		Autoincrement, Primary Key
conference	BigInt		-> Conference, id
rights		BigInt		-> Rights, id
email		Varchar 127	Not Null
first_name	Varchar 127
last_name	Varchar 127	Not Null
title		Varchar 127	(bzw. Title)
affiliation	Varchar 127
phone_number	Varchar 20
fax_number	Varchar 20
street		Varchar 127
postal_code	Varchar 20
city		Varchar 127
state		Varchar 127
country		Varchar 127
password	Varchar 32      Not Null (wird codiert gespeichert)

Tabelle Rights
~~~~~~~~~~~~~~
user_id		BigInt		-> User, id
role_id		BigInt		-> Roles, id
status		Int		z.B. aktiv / nicht aktiv

Tabelle Roles
~~~~~~~~~~~~~
id		BigInt		Autoincrement, Primary Key
conference	BigInt		-> Conference, id
type		Varchar 20	z.B. "Chair"
description	Varchar 127

Tabelle Paper
~~~~~~~~~~~~~
id		BigInt		Autoincrement, Primary Key
conference	BigInt		-> Conference, id
author		BigInt		-> User, id
thread		BigInt		-> Thread, id
title		Varchar 127	Not Null
abstract	Text
last_edited	DateAndTime	(wird automatisch gesetzt)
version		Int		(wird automatisch gesetzt)
filename	Varchar 127
state		Int		(bzw. PaperState)
format		Int		(bzw. MimeType)

Tabelle IsCoAuthorOf
~~~~~~~~~~~~~~~~~~~~
conference	BigInt		-> Conference, id
paper_id	BigInt		-> Paper, id
user_id		BigInt		-> User, id
name		Varchar 127	Not Null
email		VarChar 127	falls user_id leer ist, also der Coautor nicht angemeldet ist

Tabelle Topic
~~~~~~~~~~~~~
id		BigInt		Autoincrement, Primary Key
conference	BigInt		-> Conference, id
name		Varchar 127	Not Null

Tabelle IsAboutTopic
~~~~~~~~~~~~~~~~~~~~
paper_id	BigInt          -> Paper, id
topic		BigInt		-> Topic, id

Tabelle PrefersTopic (welche Themenbereiche den User interessieren)
~~~~~~~~~~~~~~~~~~~~
user		BigInt		-> User, id
topic		BigInt		-> Topic, id

Tabelle PrefersPaper (welche Artikel den User interessieren)
~~~~~~~~~~~~~~~~~~~~
user		BigInt		-> User, id
paper_id	BigInt          -> Paper, id

Tabelle ReviewReport
~~~~~~~~~~~~~~~~~~~~
<<<<<<< .mine
<<<<<<< .mine
id			BigInt		Autoincrement, Primary Key
conference		Varchar 20	-> Conference, abbreviation
paper_id		BigInt		-> Paper, ID
reviewer		Varchar 127	-> User, email
summary			Text
remarks			Text
confidential		Text
=======
id            BigInt          Autoincrement, Primary Key
conference    Varchar 20      -> Conference, abbreviation
paper_id      BigInt          -> Paper, ID
reviewer      Varchar 127     -> User, email
summary       Text
remarks       Text
confidential  Text
=======
id		BigInt		Autoincrement, Primary Key
conference	BigInt		-> Conference, id
paper_id	BigInt		-> Paper, id
reviewer_id	BigInt		-> User, id
status		Int
summary		Text
remarks		Text
confidential	Text
>>>>>>> .r193
>>>>>>> .r172

Tabelle Rating
~~~~~~~~~~~~~~
review_id	BigInt		-> ReviewReport, id
criterion_id	BigInt		-> Criterion, id
grade		Int		Not Null
comment		Text

Tabelle Criterion
~~~~~~~~~~~~~~~~~
id		BigInt          Autoincrement, Primary Key
conference	BigInt		-> Conference, id
name		Varchar 127     Not Null
description	Text
max_value	Int
quality_rating	Int		in Percent

Tabelle Forum
~~~~~~~~~~~~~
id		BigInt		Autoincrement, Primary Key
conference	BigInt		-> Conference, id
title		Varchar 127	Not Null
description	Text

Tabelle Thread
~~~~~~~~~~~~~~
id		BigInt		Autoincrement, Primary Key
forum_id	BigInt		-> Forum, id
title		Varchar 127
description	Text

Tabelle ParticipatesInForum
~~~~~~~~~~~~~~~~~~~~~~~~~~~
forum_id	BigInt		-> Forum, id
participant	BigInt		-> User, id

Tabelle Message
~~~~~~~~~~~~~~~
id		BigInt		Autoinctement, Primary Key
thread		BigInt		-> Thread, id
sender		BigInt		-> User, id
send_time	TimeAndDate	(wird automatisch gesetzt)
subject		Varchar 127
text		Text

Tabelle HasThread
~~~~~~~~~~~~~~~~~
forum_id	BigInt          -> Forum, id
message_id	BigInt		-> Message, id


(*: Der Contraint "wird automatisch gesetzt" kann vernachlässigt werden
    und ist nur ein Hinweis, dass diese Felder spaeter automatisch
    durch CoMa gesetzt werden.)