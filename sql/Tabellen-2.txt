Mein Vorschlag für eine SQL-Tabellenstruktur:
Einige Dinge fehlen noch, z.B. die Tabellen für Kommunikation / Forum.
Es orientiert sich ziemlich am Spec-1 Vorschlag.

Mit "->" bezeichne ich Lookup-Felder für "Tabelle, Feld"

-- Gunnar

Überarbeitung des Vorschlags für die SQL-Tabellenstruktur.
Es wurde folgende Änderungen vorgenommen:

- Bezeichnungskonventionen: Tabellennamen groß, Attributnamen klein,
  durchgängig englische Bezeichner, Assoziationsrelationen sind als
  Verben formuliert, Objekttabellen als Substantive.
- Erweiterung um die Tabellen für das Forum (Forum, Message) und um
  Relationen zum Präferieren/Ablehnen von Artikeln (prefersPaper,
  deniesPaper).
- Ergänzung fehlender Attribute aus dem UML-Diagramm des Datenmodells.
- Bewertungskriterien und die Bewertungen in den einzelnen Kriterien
  sind in eigene Tabellen ausgelagert. Vorteil: Die Liste der Bewertungs-
  kriterien ist dynamisch und nicht statisch auf 10 festgelegt.
- Erweiterung der Co-Autoren-Tabelle um den Namen des Co-Autoren.
  Zweck: Co-Autoren müssen keine User sein. Das Feld ID wird die ID des
  Co-Autoren eventuell eingetragen, wenn CoMa erkennt, dass dieser auch
  User des Systems ist.

 + + + Sandro
 
Kleine Änderungen: 
- Conference.abbreviation ist wie überall sonst Varchar 20
- User.roles genauere Beschreibung: Es sollen die least-significant Bits für die
  einzelnen Rollen genutzt werden.
  
-- Gunnar

Tabelle Conference
~~~~~~~~~~~~~~~~~~
abbreviation			Varchar 20	Prim., Uniq.
name				Varchar 127
description			Text
homepage			Varchar 127
abstract_submission_deadline	Date
paper_submission_deadline	Date
review_deadline			Date
final_version_deadline		Date
notification			Date
conference_start		Date
conference_end			Date
min_reviews_per_paper		Int

Tabelle User
~~~~~~~~~~~~
email			Varchar 127	Prim., Uniq., Not Empty
conference		Varchar 20	-> Conference, abbreviation
roles			Int		000xxxxx
					   ||||+-- Admin
					   |||+--- Chair
					   ||+---- Reviewer
					   |+----- Autor
					   +------ Teilnehmer
first_name		Varchar 127
last_name		Varchar 127
title			Int		(bzw. Title)
affiliation		Varchar 127
phone_number		Varchar 20
fax_number		Varchar 20
street			Varchar 127
postal_code		Varchar 20
city			Varchar 127
state			Varchar 127
country			Varchar 127
username		Varchar 32
password		Varchar 32

Tabelle Paper
~~~~~~~~~~~~~
id			BigInt		Autoinc., Prim., Uniq.
conference		Varchar 20	-> Conference, abbreviation
author			Varchar 127	-> User, email
title			Varchar 127
abstract		Text
last_edited		DateAndTime
version			Int
filename		Varchar 127
state			Int		(bzw. PaperState)
format			Int		(bzw. MimeType)

Tabelle isCoAuthorOf
~~~~~~~~~~~~~~~~~~~~
conference		Varchar 20	-> Conference, abbreviation
paper_id		BigInt		-> Paper, ID
name			Varchar 127
email			Varchar 127	-> User, email

Tabelle Topic
~~~~~~~~~~~~~
id			BigInt		Autoinc., Prim., Uniq.
conference		Varchar 20	-> Conference, abbreviation
name			Varchar 127

Tabelle IsAboutTopic
~~~~~~~~~~~~~~~~~~~~
paper_id		BigInt		-> Paper, ID
topic			Varchar 127	-> Topic, name

Tabelle PrefersTopic (welche Themenbereiche den User interessieren)
~~~~~~~~~~~~~~~~~~~~
user			Varchar 127	-> User, email
topic			Varchar 127	-> Topic, name

Tabelle PrefersPaper (welche Artikel den User interessieren)
~~~~~~~~~~~~~~~~~~~~
user			Varchar 127	-> User, email
paper_id		BigInt		-> Paper, ID

Tabelle DeniesPaper (welche Artikel der User ablehnt)
~~~~~~~~~~~~~~~~~~~~
user			Varchar 127	-> User, email
paper_id		BigInt		-> Paper, ID

Tabelle ReviewReport
~~~~~~~~~~~~~~~~~~~~
id			BigInt		Autoinc., Prim., Uniq.
conference		Varchar 20	-> Conference, abbreviation
paper_id		BigInt		-> Paper, ID
summary			Text
remarks			Text
confidential		Text

Tabelle Rating
~~~~~~~~~~~~~~
review_id		BigInt		-> Review, ID
grade			Int
comment			Text

Tabelle Criterion
~~~~~~~~~~~~~~~~~
id			BigInt		Autoinc., Prim., Uniq.
conference		Varchar 20	-> Conference, abbreviation
name			Varchar 127
description		Text
max_value		Int

Tabelle Forum
~~~~~~~~~~~~~
id			BigInt		Autoinc., Prim., Uniq.
conference		Varchar 20	-> Conference, abbreviation
title			Varchar 127
description		Text

Tabelle ParticipatesInForum
~~~~~~~~~~~~~~~~~~~~~~~~~~~
forum_id		BigInt		-> Forum, ID
participant		Varchar 127	-> User, email

Tabelle Message
~~~~~~~~~~~~~~~
id			Varchar 127	Prim., Uniq., Not Empty
sender			Varchar 127	-> User, email
send_time		TimeAndDate
subject			Varchar 127
text			Text

Tabelle hasThread
~~~~~~~~~~~~~~~~~
forum_id		BigInt		-> Forum, ID
message_id		Varchar 127	-> Message, ID
